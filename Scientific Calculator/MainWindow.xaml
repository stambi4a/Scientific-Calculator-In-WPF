<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Scientific_Calculator.MainWindow"
    Title="Calculator         " Height="449" Width="293" Visibility="Visible" Opacity="1" Foreground="{x:Null}" 
        ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen"
        Cursor="Arrow" SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="CornflowerBlue" WindowStyle="None" Icon="PresentationResources/Calc32x32.ico" KeyDown="MainWindowDetectKeyDown" PreviewKeyDown="MainWindowPreviewKeyDown" >
    <Window.InputBindings>
        <KeyBinding Command="Copy" 
                Key="C" 
                Modifiers="Control"/>
    </Window.InputBindings>
    <Window.Resources>
        <!--Control colors.-->
        <Color x:Key="ControlLightColor">#ffff80</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <SolidColorBrush x:Key="CommonButton.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="CommonButton.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="CommonButton.Disabled.Foreground" Color="#FF838383"/>

        <ControlTemplate x:Key="SubMenuControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Opacity="1">
                <Grid x:Name="Grid" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="22" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
                    <RadioButton Style="{DynamicResource {x:Type RadioButton}}"  Grid.Column="0" Margin="3" GroupName="CalcModes" IsChecked="{TemplateBinding IsChecked}" VerticalAlignment="Center" x:Name="GlyphPanel" Visibility="Visible"/>
                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup Grid.Column="2" x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" HorizontalOffset="-1" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Border x:Name="SubMenuBorder" BorderBrush="CornflowerBlue" BorderThickness="0">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" >
                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <!--<Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>-->
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="False">
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="RoyalBlue"/>
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#10103d" Offset="1"/>
                                <GradientStop Color="#FF2F1CF1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Navy" Offset="1"/>
                                <GradientStop Color="CornflowerBlue"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SubMenuRightControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Opacity="1">
                <Grid x:Name="Grid" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="22" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
                    <RadioButton Style="{DynamicResource {x:Type RadioButton}}"  Grid.Column="0" Margin="2" GroupName="CalcModes" IsChecked="{TemplateBinding IsChecked}" VerticalAlignment="Center" x:Name="GlyphPanel" Visibility="Visible"/>
                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup Grid.Column="2" x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-22" HorizontalOffset="-1">
                        <Border x:Name="SubMenuBorder" BorderBrush="CornflowerBlue" BorderThickness="0">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="False">
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="RoyalBlue"/>
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF060329" Offset="1"/>
                                <GradientStop Color="#FF2F1CF1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Navy" Offset="1"/>
                                <GradientStop Color="CornflowerBlue"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="{x:Type RadioButton}"
       TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{DynamicResource RadioButtonFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="8"
                  Height="8">
                                    <Ellipse x:Name="Border"
                       StrokeThickness="2">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}">
                                            </SolidColorBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SubMenuStyle" TargetType="{x:Type MenuBase}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuBase}">
                        <Border>
                            <ItemsPresenter HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="MemoryButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#003300" Offset="1"/>
            <GradientStop Color="#80ff80"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MemoryButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF051D01" Offset="1"/>
            <GradientStop Color="#FF61DA34"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NumericButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#000088" Offset="0"/>
            <GradientStop Color="#00091a" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NumericButton.Border.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#002699" Offset="0"/>
            <GradientStop Color="#000d33" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NumericButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF020A4F" Offset="0"/>
            <GradientStop Color="#FF01020F" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ClearButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#800000" Offset="1"/>
            <GradientStop Color="#ff3300"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ClearButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF1B0105" Offset="1"/>
            <GradientStop Color="#FFFF1100"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SpecialButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF1B0314" Offset="1"/>
            <GradientStop Color="#FF521C55"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SpecialButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF0E010A" Offset="1"/>
            <GradientStop Color="#FF4D093B"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SpecialButton.Border.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF1B001B" Offset="1"/>
            <GradientStop Color="#FF340A33"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SwitchButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#0A0A0A" Offset="0.536"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SwitchButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#030303"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SwitchButton.Border.Background" Color="#1A1A1A"/>
        <LinearGradientBrush x:Key="ConstantButton.Border.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF1A0101" Offset="1"/>
            <GradientStop Color="#FF761111"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ConstantButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#FF250707"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ConstantButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF130303" Offset="1"/>
            <GradientStop Color="#FF3E0A0A"/>
        </LinearGradientBrush>
        <Style x:Key="MemoryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Height="33" Width="33" BorderBrush="#FF0B470B" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource MemoryButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MemoryButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MemoryButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NumericButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Height="{TemplateBinding Height}" Width="33" BorderBrush="{StaticResource NumericButton.Border.Background}" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource NumericButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource NumericButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource NumericButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <!--<Setter Property="Effect" TargetName="border">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF004D00" BlurRadius="0" ShadowDepth="3"/>
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Height="33" Width="33" BorderBrush="#FF5B040B" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource ClearButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ClearButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ClearButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <!--<Setter Property="Effect" TargetName="border">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF004D00" BlurRadius="0" ShadowDepth="3"/>
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SpecialButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Height="33" Width="32" BorderBrush="{StaticResource SpecialButton.Border.Background}" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource SpecialButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SpecialButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SpecialButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SwitchButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Height="33" Width="33" BorderBrush="{StaticResource SwitchButton.Border.Background}" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource SwitchButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SwitchButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SwitchButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ConstantButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Height="{TemplateBinding Height}" Width="33" BorderBrush="{StaticResource ConstantButton.Border.Background}" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource ConstantButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ConstantButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ConstantButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <!--<Setter Property="Effect" TargetName="border">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF004D00" BlurRadius="0" ShadowDepth="3"/>
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowManipulationButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" SnapsToDevicePixels="true" BorderThickness="1">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF060329" Offset="1"/>
                                            <GradientStop Color="#FF2F1CF1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="CornflowerBlue"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Navy" Offset="1"/>
                                            <GradientStop Color="#FF2F1CF1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="CornflowerBlue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF060329" Offset="1"/>
                                            <GradientStop Color="#FF2F1CF1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="CornflowerBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OnOffButtonstyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" d:IsLocked="True">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:IsLocked="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Effect>
        <BlurEffect Radius="0" RenderingBias="Quality"/>
    </Window.Effect>
    <Window.Background>
        <ImageBrush ImageSource="PresentationResources/maxresdefaultBluerised.png" Stretch="UniformToFill"/>
    </Window.Background>

    <Grid x:Name="MainGrid" ShowGridLines="True" Loaded="MainGridLoaded">
        <Menu x:Name="MainMenu" Style="{DynamicResource SubMenuStyle}" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="Auto" Margin="3,3,0,0">
            <MenuItem x:Name="ModeSubMenu" Header="Mode" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="60" Template="{DynamicResource SubMenuControlTemplate}" Height="22" Padding="-6,1,0,1"  BorderThickness="1,1,0,1">
                <MenuItem x:Name="StandardMenuItem" Template="{DynamicResource SubMenuControlTemplate}" Header="Standard" HorizontalAlignment="Left" Width="100" Height="22" Margin="0,1,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" IsChecked="True"
                      BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="ScientificMenuItem" Header="Scientific" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="100" Height="22" Margin="0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="ProgrammerMenuItem" Header="Programmer" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="100" Height="22" Margin="0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="ThematicSubSubMenu" Template="{DynamicResource SubMenuRightControlTemplate}" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="100" Height="22" Padding="-5,1,0,1" Margin="0,0,0,0" BorderThickness="1,0,1,1"  SnapsToDevicePixels="False" IsCheckable="True" Click="ThematicSubSubMenu_OnClick" StaysOpenOnClick="True" LostFocus="ThematicSubMenuLostFocus">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="73">
                            <TextBlock Name="TextBlock" Text="Thematic"/>
                            <Image Source="PresentationResources/arrow-little.png"
                   Height="10" Margin="5,0,0,0"/>
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem x:Name="EconomicsMenuItem" Header="Economics" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="0,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="StatisticsMenuItem" Header="Statistics" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="AstronomyMenuItem" Header="Astronomy" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="TrigonometryMenuItem" Header="Trigonometry" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="ElectronicsMenuItem" Header="Electronics" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="21" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                </MenuItem>
                <MenuItem x:Name="UnitConversionsMenuItem" Header="Conversions" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="100" Height="20" Margin="0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="ViewSubMenu" Header="View" Template="{DynamicResource SubMenuControlTemplate}" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="60" Padding="-6,1,0,1" Margin="0,0,0,0" BorderThickness="0,1,0,1"  SnapsToDevicePixels="False">
                <MenuItem x:Name="ThemesSubMenu" Template="{DynamicResource SubMenuRightControlTemplate}" HorizontalAlignment="Left" Width="80" Height="22" Margin="1,0,0,0" Padding="-5,1,0,0" IsCheckable="True" BorderThickness="1,1,1,1" Background="{x:Null}" Click="ThemesMenuItem_OnClickhemesSubSubMenu_OnClick" StaysOpenOnClick="True" LostFocus="ThemesSubMenuLostFocus">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Themes"/>
                            <Image Source="E:\My Applications\Standard Calculator\Standard Calculator\PresentationResources\arrow-little.png"
                   Height="10" Margin="0,0,0,0"/>
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem x:Name="AeroThemeMenuItem" Header="Aero" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,1,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,1,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="OpalThemeMenuItem" Header="Opal" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="AquaThemeMenuItem" Header="Aqua" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="ClassicThemeMenuItem" Header="Classic" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="DigitEraThemeMenuItem" Header="Digit Era" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="21" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top" IsChecked="True">
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="HelpSubMenu" Header="Help" Template="{DynamicResource SubMenuControlTemplate}" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="60" Padding="-5,1,0,1" Margin="0,0,0,0" BorderThickness="0,1,1,1" SnapsToDevicePixels="False">
                <MenuItem x:Name="AboutMenuItem" Header="About" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="70" Height="22" Margin="1,0,0,0" Padding="-5,1,0,0" BorderThickness="1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="TutorialMenuItem" Header="Tutorial" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="70" Height="22" Margin="1,0,0,0" Padding="-5,1,0,0" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="LinksMenuItem" Header="Links" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="70" Height="20" Margin="1,0,0,0" Padding="-5,1,0,0" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
            </MenuItem>
        </Menu>
        <StackPanel HorizontalAlignment="Left" Height="82" VerticalAlignment="Top" Width="285" RenderTransformOrigin="0.66,0.8" Margin="3,30,0,0" Background="#FF020217" Opacity="0.95">
            <RichTextBox x:Name="InputField" Opacity="1" BorderBrush="#FF3399FF" SelectionBrush="#FF107415" FontStyle="Italic" Foreground="#FFF9EE00" RenderTransformOrigin="0.753,-0.278" Height="33" BorderThickness="1,1,1,0" FontFamily="Microsoft Sans Serif" FontSize="14" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="#FF010911"/>
            <RichTextBox x:Name="OutputField" Opacity="1" BorderBrush="#FF3399FF" Background="#FF010911" SelectionBrush="#FF107415" Foreground="#FFF9EE00" RenderTransformOrigin="0.753,-0.278" Height="33" BorderThickness="1,0,1,0" FontSize="14" FontFamily="Microsoft Sans Serif" IsReadOnly="True" Cursor="Arrow" SelectionOpacity="0">
                <RichTextBox.ContextMenu>
                    <ContextMenu Style="{DynamicResource SubMenuStyle}" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="Auto" Margin="0,20,0,0">
                        <MenuItem Name="OutputFieldCopyMenuItem" Command="Copy" Header="Copy Ctrl+C" Template="{DynamicResource SubMenuControlTemplate}" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="Auto" Height="22" Padding="-10,0,10,1"  BorderThickness="1" Margin="0">
                        </MenuItem>
                    </ContextMenu>
                </RichTextBox.ContextMenu>
                <FlowDocument TextAlignment="Right"/>
            </RichTextBox>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="285" RenderTransformOrigin="0.66,0.8" Margin="0" Background="#FF010911" Opacity="0.95">
                <RichTextBox x:Name="RepresentationNotationField" Opacity="1" BorderBrush="#FF3399FF" Foreground="#FFF2E98B" RenderTransformOrigin="0.753,-0.278" Height="16" Width="40" HorizontalAlignment="Left" BorderThickness="1,0,0,1" FontFamily="Microsoft Sans Serif" FontSize="8" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="{x:Null}" TextOptions.TextFormattingMode="Display"/>
                <RichTextBox x:Name="OperationNotationField" Opacity="1" BorderBrush="#FF3399FF" Foreground="#FFF2E98B" RenderTransformOrigin="0.753,-0.278" Height="16" Width="40" HorizontalAlignment="Left" BorderThickness="0,0,0,1" FontFamily="Microsoft Sans Serif" FontSize="8" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="{x:Null}"/>
                <RichTextBox x:Name="InversionStateField" Opacity="1" BorderBrush="#FF3399FF" Foreground="#FFF2E98B" RenderTransformOrigin="0.753,-0.278" Height="16" Width="40" HorizontalAlignment="Left" BorderThickness="0,0,0,1" FontFamily="Microsoft Sans Serif" FontSize="8" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="{x:Null}"/>
                <RichTextBox x:Name="AngleUnitField" Opacity="1" BorderBrush="#FF3399FF" Foreground="#FFF2E98B" RenderTransformOrigin="0.753,-0.278" Height="16" Width="40" HorizontalAlignment="Left" BorderThickness="0,0,0,1" FontFamily="Microsoft Sans Serif" FontSize="8" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="{x:Null}"/>
                <RichTextBox x:Name="PrecisionField" Opacity="1" BorderBrush="#FF3399FF" Foreground="#FFF2E98B" RenderTransformOrigin="0.753,-0.278" Height="16" Width="40" HorizontalAlignment="Left" BorderThickness="0,0,0,1" FontFamily="Microsoft Sans Serif" FontSize="8" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="{x:Null}"/>
                <RichTextBox x:Name="FractionModeField" Opacity="1" BorderBrush="#FF3399FF" Foreground="#FFF2E98B" RenderTransformOrigin="0.753,-0.278" Height="16" Width="40" HorizontalAlignment="Left" BorderThickness="0,0,0,1" FontFamily="Microsoft Sans Serif" FontSize="8" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="{x:Null}"/>
                <RichTextBox Opacity="1" Name="LowerRightTextBox" BorderBrush="#FF3399FF" Foreground="{x:Null}" Height="16" Width="45" HorizontalAlignment="Left" BorderThickness="0,0,1,1" IsReadOnly="True" ContextMenu="{x:Null}" Cursor="Arrow" SelectionOpacity="0" IsTabStop="False" Background="{x:Null}" SelectionBrush="{x:Null}"/>

            </StackPanel>

        </StackPanel>
        <Grid Grid.Column="0" HorizontalAlignment="Left" Height="329" VerticalAlignment="Top" Width="287" Margin="2,116,0,0" Opacity=".95">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF0F084F"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="7*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="7*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
            </Grid.ColumnDefinitions>
            <!-- MemoryButtons-->
            <Button x:Name="AddToMemoryButton" Grid.Row="0" Grid.Column="0" Content="M+" Style="{DynamicResource MemoryButtonStyle}" Height="33"  FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="SubtractFromMemoryButton" Grid.Row="0" Grid.Column="1" Content="M-" Style="{DynamicResource MemoryButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="RestoreFromMemoryButton" Grid.Row="0" Grid.Column="2" Content="MR" Style="{DynamicResource MemoryButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="35" Click="ButtonClick">
            </Button>
            <Button x:Name="ClearFromMemoryButton" Grid.Row="0" Grid.Column="3" Content="MC" Style="{DynamicResource MemoryButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>

            <!--Numeric Buttons-->
            <Button x:Name="One1DigitButton" Grid.Row="3" Grid.Column="0" Content="1"  Height="33" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick"/>
            <Button x:Name="Two2DigitButton" Grid.Row="3" Grid.Column="1" Content="2"  Style="{DynamicResource NumericButtonStyle}" Height="33"  FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Three3DigitButton" Grid.Row="3" Grid.Column="2" Content="3"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Four4DigitButton" Grid.Row="4" Grid.Column="0" Content="4"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Five5DigitButton" Grid.Row="4" Grid.Column="1" Content="5"  Style="{DynamicResource NumericButtonStyle}" Height="33"   FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Six6DigitButton" Grid.Row="4" Grid.Column="2" Content="6"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Seven7DigitButton" Grid.Row="5" Grid.Column="0" Content="7"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Eight8DigitButton" Grid.Row="5" Grid.Column="1" Content="8"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Nine9DigitButton" Grid.Row="5" Grid.Column="2" Content="9"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="ChangeFractionModeButton" Style="{DynamicResource SwitchButtonStyle}" Grid.Row="1" Grid.Column="5" FontWeight="Bold" Click="FractionSwitcherButtonClick" BorderThickness="2">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="Auto" Height="Auto">
                    <Image Source="PresentationResources/fraction-image15x15.png"
                   Height="14" Width="Auto" Margin="0,0,0,0"/>
                </StackPanel>
            </Button>
            <Button x:Name="DecimalPointDigitButton" Grid.Row="5" Grid.Column="3" Content="."  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Zero0DigitButton" Grid.Row="4" Grid.Column="3" Content="0" Height="33" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" FontWeight="Bold" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>

            <Button x:Name="ClearAllButton" Grid.Row="0" Grid.Column="5" Content="C" Style="{DynamicResource ClearButtonStyle}" FontWeight="Bold" Margin="0,1" Click="ButtonClick">
            </Button>
            <Button x:Name="ClearLastAllButton" Grid.Row="0" Grid.Column="6" Content="CE" Style="{DynamicResource ClearButtonStyle}" FontWeight="Bold" Margin="0,1" Click="ButtonClick">
            </Button>
            <Button x:Name="HistorySpecialButton" Grid.Row="0" Grid.Column="7" Style="{DynamicResource ConstantButtonStyle}" FontWeight="Bold" Margin="0,1" Click="ButtonHistoryClick">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="Auto" Height="Auto">
                    <Image Source="PresentationResources/history-logo15x15.png"
                   Height="10" Width="Auto" Margin="0,0,0,0"/>
                </StackPanel>
            </Button>
            <Button x:Name="ConstantPickerButton" Grid.Row="0" Grid.Column="8" Content="CST" Style="{DynamicResource ConstantButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" Padding ="0,-2,0,0" FontSize="11">
            </Button>

            <!--<Button x:Name="SwitchOnOffButton" Grid.Row="0" Grid.Column="7" Content="On" Style="{DynamicResource ClearButtonStyle}" FontWeight="Bold" Margin="0,1" Click="ButtonClick">
            </Button>-->
            <!--SpecailButtons-->
            <Button x:Name="DeleteSpecialButton" Grid.Row="3" Grid.Column="3" Style="{DynamicResource SpecialButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonDeleteClick">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="Auto" Height="Auto" Margin ="0,-2,0,0">
                    <Image Source="PresentationResources/clear-arrow20x20.png"
                   Height="20" Width="Auto" Margin="0,0,0,0"/>
                </StackPanel>
            </Button>

            <!--Separators-->
            <StackPanel Name="RightSeparatorUpPad" Width="138" Grid.Row="2" Grid.Column="5" Grid.ColumnSpan="4" VerticalAlignment="Top" HorizontalAlignment="Left" Height="5" Margin="1,1,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF007D99" Offset="0.5"/>
                        <GradientStop Color="#FF000D33" Offset="1"/>
                        <GradientStop Color="#FF000D33"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <StackPanel Name="LeftSeparatorUpPad" Width="138" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Top" HorizontalAlignment="Left" Height="5" Margin="1,1,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF007D99" Offset="0.5"/>
                        <GradientStop Color="#FF000D33" Offset="1"/>
                        <GradientStop Color="#FF000D33"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <StackPanel Name="DotSeparatorUpPad" Width="5" Grid.Row="2" Grid.Column="4" VerticalAlignment="Top" HorizontalAlignment="Left" Height="5" MaxWidth="5" Margin="1,1,0,0">
                <Ellipse Width="5" Height="5">
                    <Ellipse.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#002699" Offset="1"/>
                            <GradientStop Color="#FF007D99"/>
                        </LinearGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
            </StackPanel>
            <StackPanel Name="UpperSeparatorLeftRightPads" Width="5" Grid.Row="0" Grid.Column="4" Grid.RowSpan="2"  VerticalAlignment="Top" HorizontalAlignment="Left" Height="68" Margin="1,1,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <LinearGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="#FF007D99" Offset="0.522"/>
                        <GradientStop Color="#FF000D33" Offset="1"/>
                        <GradientStop Color="#FF000D33"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <StackPanel Name="MiddleSeparatorUpPad" Width="5" Grid.Row="6" Grid.Column="4" VerticalAlignment="Top" HorizontalAlignment="Left" Height="5" MaxWidth="5" Margin="1,1,0,0">
                <Ellipse Width="5" Height="5">
                    <Ellipse.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#002699" Offset="1"/>
                            <GradientStop Color="#FF007D99"/>
                        </LinearGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
            </StackPanel>
            <StackPanel Name="MiddleSeparatorLeftRightPads" Width="5" Grid.Row="3" Grid.Column="4" Grid.RowSpan="3"  VerticalAlignment="Top" HorizontalAlignment="Left" Height="103" Margin="1,1,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <LinearGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="#FF007D99" Offset="0.5"/>
                        <GradientStop Color="#FF000D33" Offset="1"/>
                        <GradientStop Color="#FF000D33"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <StackPanel Name="LowerSeparatorLeftRightPads" Width="5" Grid.Row="7" Grid.Column="4" Grid.RowSpan="4"  VerticalAlignment="Top" HorizontalAlignment="Left" Height="138" Margin="1,1,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <LinearGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="#FF007D99" Offset="0.5"/>
                        <GradientStop Color="#FF000D33" Offset="1"/>
                        <GradientStop Color="#FF000D33"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <StackPanel Name="LeftSeparatorBetweenBottomUpPads" Width="138" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Top" HorizontalAlignment="Left" Height="5" Margin="1,1,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF007D99" Offset="0.5"/>
                        <GradientStop Color="#FF000D33" Offset="1"/>
                        <GradientStop Color="#FF000D33"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <StackPanel Name="RightSeparatorBottomUpPads" Width="138" Grid.Row="6" Grid.Column="5" Grid.ColumnSpan="4" VerticalAlignment="Top" HorizontalAlignment="Left" Height="5" Margin="1,1,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF007D99" Offset="0.5"/>
                        <GradientStop Color="#FF000D33" Offset="1"/>
                        <GradientStop Color="#FF000D33"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <!--Operations Buttons-->
            <Button x:Name="LeftBracketButton" Grid.Row="3" Grid.Column="5" Content="(" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" FontSize="14" Click="ButtonClick"/>
            <Button x:Name="RightBracketButton" Grid.Row="4" Grid.Column="5" Content=")" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" FontSize="14" Click="ButtonClick"/>
            <Button x:Name="EqualsButton" Style="{DynamicResource SpecialButtonStyle}" Grid.Row="5" Grid.Column="5" Content="=" Margin="0,1" FontWeight="Bold" Foreground="#FFE4C814" BorderThickness="2" Click="ButtonClick">
            </Button>
            <Button x:Name="AddOperationButton" Grid.Row="3" Grid.Column="6" Content="+" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" FontSize="14" Click="ButtonClick"/>
            <Button x:Name="SubtractOperationButton" Grid.Row="4" Grid.Column="6" Content="–" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
            <Button x:Name="ChangeSignOperationButton" Grid.Row="5" Grid.Column="6" Content="±" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
            <Button x:Name="RandomOperationButton" Grid.Row="3" Grid.Column="8" Content="RAN" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick" FontSize="11" Foreground="#FF03F9F9"/>
            <Button x:Name="MultiplyOperationButton" Grid.Row="3" Grid.Column="7" Content="*" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" FontSize="14" Click="ButtonClick"/>
            <Button x:Name="DivideOperationButton" Grid.Row="4" Grid.Column="7" Content="/" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
            <Button x:Name="ModOperationButton" Grid.Row="5" Grid.Column="7" Content="%" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
            <Button x:Name="AbsoluteValueOperationButton" Grid.Row="4" Grid.Column="8" Content="ABS" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick" FontSize="11" Foreground="#FF03F9F9"/>
            <Button x:Name="GetSignOperationButton" Grid.Row="5" Grid.Column="8" Content="SGN" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick" FontSize="11" Foreground="#FF03F9F9"/>

            <Button x:Name="ChangeTrigonometryUnitButton" Style="{DynamicResource SwitchButtonStyle}" Grid.Row="1" Grid.Column="0" Content="DRG" FontWeight="Bold" Click="ButtonClick" BorderThickness="2" FontSize="11">
            </Button>
            <Button x:Name="InvertFunctionsButton" Style="{DynamicResource SwitchButtonStyle}"  Grid.Row="1" Grid.Column="1" Content="INV" FontWeight="Bold" BorderBrush="{x:Null}" Click="ButtonClick" FontSize="11">
            </Button>
            <Button x:Name="MakeFunctionsPostfixPrefixButton" Grid.Row="1" Grid.Column="2" Content="PRE" Style="{DynamicResource SwitchButtonStyle}" FontWeight="Bold" Click="ButtonClick" FontSize="11">
            </Button>
            <Button x:Name="ChangeNotationButton" Grid.Row="1" Grid.Column="3" Content="FES" Style="{DynamicResource SwitchButtonStyle}" FontWeight="Bold" Click="ButtonClick" FontSize="11">
            </Button>

            <!--Numeric Buttons-->

            <Button x:Name="SineFunctionButton" Grid.Row="7" Grid.Column="0" Content="sin" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" FontSize="11"/>
            <Button x:Name="ArcusSineFunctionButton" Grid.Row="7" Grid.Column="0" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusSineButtonClick" Visibility="Hidden">
                <TextBlock Width="26" Margin ="1,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin" >sin</Run>
                    <Run FontSize="7" FontWeight="Bold" BaselineAlignment="Top">-1</Run>
                </TextBlock>
            </Button>
            <Button x:Name="CosineFunctionButton" Grid.Row="7" Grid.Column="1" Content="cos"  Style="{DynamicResource NumericButtonStyle}"  FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick" FontSize="11">
            </Button>
            <Button x:Name="ArcusCosineFunctionButton" Grid.Row="7" Grid.Column="1" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusCosineButtonClick" Visibility="Hidden">
                <TextBlock Width="26" Margin ="1,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin" >cos</Run>
                    <Run FontSize="7" FontWeight="Bold" BaselineAlignment="Top">-1</Run>
                </TextBlock>
            </Button>
            <Button x:Name="TangentFunctionButton" Grid.Row="7" Grid.Column="2" Content="tg"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" FontSize="11">
            </Button>
            <Button x:Name="ArcusTangentFunctionButton" Grid.Row="7" Grid.Column="2" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusTangentFunctionButtonClick" Visibility="Hidden">
                <TextBlock Width="26" Margin ="1,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin" >tg</Run>
                    <Run FontSize="7" FontWeight="Bold"  BaselineAlignment="Top">-1</Run>
                </TextBlock>
            </Button>
            <Button x:Name="CotangentFunctionButton" Grid.Row="7" Grid.Column="3" Content="ctg"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick" FontSize="11">
            </Button>
            <Button x:Name="ArcusCotangentFunctionButton" Grid.Row="7" Grid.Column="3" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusContangentButtonClick" Visibility="Hidden">
                <TextBlock Width="26" Margin ="1,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin" >ctg</Run>
                    <Run FontSize="7" FontWeight="Bold" BaselineAlignment="Top">-1</Run>
                </TextBlock>
            </Button>
            <Button x:Name="SineHyperbolicFunctionButton" Grid.Row="8" Grid.Column="0" Content="sinh"  Style="{DynamicResource NumericButtonStyle}"   FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" FontSize="11">
            </Button>
            <Button x:Name="ArcusSineHyperbolicFunctionButton" Grid.Row="8" Grid.Column="0" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusSineHyperbolicButtonClick" Visibility="Hidden">
                <TextBlock Width="29" Margin ="-1,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin">sinh</Run>
                    <Run FontSize="7" FontWeight="Bold"  BaselineAlignment="Top">-1</Run>
                </TextBlock>
            </Button>
            <Button x:Name="CosineHyperbolicFunctionButton" Grid.Row="8" Grid.Column="1" Content="cosh"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick" FontSize="11" TextOptions.TextFormattingMode="Display">
            </Button>
            <Button x:Name="ArcusCosineHyperbolicFunctionButton" Grid.Row="8" Grid.Column="1" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusCosineHyperbolicButtonClick" Visibility="Hidden">
                <TextBlock Width="29" Margin ="-1,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin">cosh</Run>
                    <Run FontSize="7" FontWeight="Bold" BaselineAlignment="Top" FontStretch="Normal">-1</Run>
                </TextBlock>
            </Button>
            <Button x:Name="TangentHyperbolicFunctionButton" Grid.Row="8" Grid.Column="2" Content="tgh"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick" FontSize="11" TextOptions.TextFormattingMode="Display">
            </Button>
            <Button x:Name="ArcusTangentHyperbolicFunctionButton" Grid.Row="8" Grid.Column="2" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusTangentHyperbolicButtonClick" Visibility="Hidden">
                <TextBlock Width="29" Margin ="0,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin">tgh</Run>
                    <Run FontSize="7" FontWeight="Bold" BaselineAlignment="Top" FontStretch="Normal">-1</Run>
                </TextBlock>
            </Button>
            <Button x:Name="CotangentHyperbolicFunctionButton" Grid.Row="8" Grid.Column="3" Content="ctgh"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick" FontSize="11" TextOptions.TextFormattingMode="Display">
            </Button>
            <Button x:Name="ArcusCotangentHyperbolicFunctionButton" Grid.Row="8" Grid.Column="3" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ArcusCotangentHyperbolicButtonClick" Visibility="Hidden">
                <TextBlock Width="28" Margin ="0,0,0,0" TextOptions.TextFormattingMode="Display">
                    <Run FontSize="10" FontWeight="Thin">ctgh</Run>
                    <Run FontSize="7" FontWeight="Bold" BaselineAlignment="Top" FontStretch="Normal">-1</Run>
                </TextBlock>
            </Button>

            <!-- Exponent Functions-->
            <Button x:Name="MultiplierWithPowerOfTen" Grid.Row="9" Grid.Column="0" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Click="ButtonClick" Content="EXP" FontSize="11">
            </Button>
            <Button x:Name="PowerOf2Button" Grid.Row="9" Grid.Column="1" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Click="PowerOfTwoButtonClick">
                <TextBlock Margin ="0,0,0,4">
                    <Run FontSize="11">2</Run>
                    <Run FontSize="8" BaselineAlignment="Superscript">x</Run>
                </TextBlock>
            </Button>
            <Button x:Name="PowerOf10Button" Grid.Row="9" Grid.Column="2" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="PowerOfTenButtonClick">
                <TextBlock Margin ="0,0,0,4">
                    <Run FontSize="11" >10</Run>
                    <Run FontSize="8" BaselineAlignment="Superscript">x</Run>
                </TextBlock>
            </Button>
            <Button x:Name="PowerOfEulerNumberButton" Grid.Row="9" Grid.Column="3" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Click="PowerOfEulerNumberButtonClick">
                <TextBlock Margin ="0,0,0,4">
                    <Run FontSize="12" >e</Run>
                    <Run FontSize="8" BaselineAlignment="Superscript">x</Run>
                </TextBlock>
            </Button>

            <!--Power Functions-->
            <Button x:Name="SecondPowerOfXButton" Grid.Row="7" Grid.Column="5" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="SecondPowerOfXButtonClick">
                <TextBlock Width="16" Height="16">
                    <Run FontSize="11">x</Run>
                    <Run FontSize="7" BaselineAlignment="Top">2</Run>
                </TextBlock>
            </Button>
            <Button x:Name="ThirdPowerOfXButton" Grid.Row="7" Grid.Column="6" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ThirdPowerOfXButtonClick">
                <TextBlock Width="16" Height="16">
                    <Run FontSize="11" >x</Run>
                    <Run FontSize="7" BaselineAlignment="Top">3</Run>
                </TextBlock>
            </Button>
            <Button x:Name="YPowerOfXButton" Grid.Row="7" Grid.Column="7" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="YPowerOfXButtonClick" Padding="0,-3,0,0">
                <TextBlock Width="16" Height="16">
                    <Run FontSize="11" >x</Run>
                    <Run FontSize="7" BaselineAlignment="Top">y</Run>
                </TextBlock>
            </Button>
            <Button x:Name="RoundOperationButton" Grid.Row="7" Grid.Column="8" Content="RND" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick" FontSize="11" Foreground="#FF03F9F9"/>

            <!--Square Root Functions-->
            <Button x:Name="SquareRootButton" Grid.Row="8" Grid.Column="5" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="SquareRootButtonClick">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="Auto" Height="Auto">
                    <Image Source="PresentationResources/square-root-20x20.png"
                   Height="14" Width="Auto" Margin="0,0,0,4"/>
                </StackPanel>
            </Button>
            <Button x:Name="ThirdSquareRootButton" Grid.Row="8" Grid.Column="6" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ThirdRootButtonClick">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="Auto" Height="Auto" >
                    <Image Source="PresentationResources/third-square-root-20x20.png"
                   Height="14" Width="Auto" Margin="0,0,0,4"/>
                </StackPanel>
            </Button>
            <Button x:Name="YSquareRootButton" Grid.Row="8" Grid.Column="7" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1"  Click="YRootButtonClick">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="Auto" Height="Auto" >
                    <Image Source="PresentationResources/y-root-x.png"
                   Height="14" Width="Auto" Margin="0,0,0,4"/>
                </StackPanel>
            </Button>
            <Button x:Name="TruncateOperationButton" Grid.Row="8" Grid.Column="8" Content="TRU" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick" FontSize="11" Foreground="#FF03F9F9"/>

            <!--Logarithmic Functions-->
            <Button x:Name="LogarithmBase2Button" Grid.Row="9" Grid.Column="5" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Click="LogarithmAtBase2ButtonClick">
                <TextBlock Width="30" Margin="1,0,0,0">
                    <Run FontSize="11">log</Run>
                    <Run FontSize="7" BaselineAlignment="Subscript">2</Run>
                </TextBlock>
            </Button>
            <Button x:Name="LogarithmAtBase10Button" Grid.Row="9" Grid.Column="6" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1"  Click="LogarithmAtBase10ButtonClick" Padding ="-1,0,0,0">
                <TextBlock Width="29">
                    <Run FontSize="11">log</Run>
                    <Run FontSize="7" BaselineAlignment="Subscript">10</Run>
                </TextBlock>
            </Button>
            <Button x:Name="NaturalLogarithmNumberButton" Grid.Row="9" Grid.Column="7" Content="ln"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="NaturalLogarithmButtonClick" FontSize="11">
            </Button>
            <Button x:Name="LogarithmAtXBaseNumberButton" Grid.Row="9" Grid.Column="8"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="LogarithmAtXBaseNumberButtonClick" FontSize="11">
                <TextBlock Width="29">
                    <Run FontSize="11">log</Run>
                    <Run FontSize="7" BaselineAlignment="Subscript">x</Run>
                </TextBlock>
            </Button>

            <Button x:Name="RoundPrecisionButton" Grid.Row="1" Grid.Column="6" Content="Prec" Style="{DynamicResource SwitchButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick" FontSize="11"/>
            <Button x:Name="PiConstantButton" Grid.Row="1" Grid.Column="7" Content="π"  Margin="0,1" Style="{DynamicResource ConstantButtonStyle}" Click="ButtonClick" FontSize="15" Foreground="#FFF9D702" BorderThickness="2" Padding="0,-3,0,0">
            </Button>
            <Button x:Name="EulerNumberConstantPicker" Grid.Row="1" Grid.Column="8" Content="e"  Style="{DynamicResource ConstantButtonStyle}" Margin="0,1" Click="ButtonClick" FontSize="15" Padding="0,-3,0,0"/>

            <!--Special Functions-->
            <Button x:Name="GcdButton" Grid.Row="10" Grid.Column="0" Content="GCD"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9" FontSize="11">
            </Button>
            <Button x:Name="LcmButton" Grid.Row="10" Grid.Column="1" Content="LCM"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9" FontSize="11">
            </Button>
            <Button x:Name="VariationsButton" Grid.Row="10" Grid.Column="5" Content="nPr"  Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9" FontSize="11">
            </Button>
            <!--<Button x:Name="EmptyButton" Grid.Row="9" Grid.Column="3" Content=""  Style="{DynamicResource NumericButtonStyle}" Width="0" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>-->
            <Button x:Name="CombinationsButton" Grid.Row="10" Grid.Column="6" Content="nCr"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9" FontSize="11">
            </Button>
            <Button x:Name="PermutationsButton" Grid.Row="10" Grid.Column="2" Content="n!"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9" FontSize="11">
            </Button>
            <Button x:Name="DoubleFactorial" Grid.Row="10" Grid.Column="3" Content="n!!"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9" FontSize="11">
            </Button>
            <Button x:Name="FibonacciButton" Grid.Row="10" Grid.Column="7" Content="Fib"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9" FontSize="11">
            </Button>
            <Button x:Name="PrimeButton" Grid.Row="10" Grid.Column="8" Content="Pri"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick" Foreground="#FF03F9F9">
            </Button>
            <!--<Button x:Name="PermutationsButton" Grid.Row="9" Grid.Column="6" Content="Fib"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>-->
        </Grid>

        <!--Window Manipulation Buttons-->
        <Button x:Name="SwitchButton" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" Margin="0,4,49,0" Padding="0,0,0,0" BorderThickness="0" Click="SwitchButtonClick" BorderBrush="#FF17A23C" Background="{x:Null}" Style="{DynamicResource OnOffButtonstyle}">
            <StackPanel Name="ImageStackPanel" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Width="25" Height="25" Margin="0,0,0,0">
                <Image Name="SwitchButtonOnBackground" Source="PresentationResources/on.png"
                   Height="24" Width="26" Margin="0,0,0,0" StretchDirection="DownOnly"/>
                <Image Name="SwitchButtonOffBackground" Source="PresentationResources/off.png"
                   Height="27" Width="25" Margin="0,-25,0,0" Visibility="Hidden"/>
            </StackPanel>
        </Button>
        <Button x:Name="MinimizeButton" Content="__" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" BorderBrush="RoyalBlue" Margin="0,4,26,0" Foreground="#FF64FFFF" FontWeight="Bold" RenderTransformOrigin="-0.95,0.55" Padding="1,-4,1,0" Style="{DynamicResource WindowManipulationButton}" Click="MinimizeButtonClick">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF060329" Offset="1"/>
                    <GradientStop Color="#FF2F1CF1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>

        <Button x:Name="CloseButton" Content="x" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" BorderBrush="RoyalBlue" Margin="0,4,3,0" Foreground="#FF64FFFF" FontWeight="Bold" RenderTransformOrigin="-0.95,0.55" Padding="1,-4,1,0" Style="{DynamicResource WindowManipulationButton}" Click="CloseButtonClick">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF060329" Offset="1"/>
                    <GradientStop Color="#FF2F1CF1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>



    </Grid>
</Window>
